[
  {
    "Id": "280044",
    "ThreadId": "81574",
    "Html": "<p>I'm a little unsure of the best way of to share a folder of common files between projects.&nbsp; These common files are typically 3rd party libraries or libraries released from sources outside of TFS.</p>\r\n<p>To try and explain the situation a little better, I'll explain the setup and what I was trying to do.</p>\r\n<p>First, I had a main project - &quot;My Product&quot; with two branches Main and Release.&nbsp; We're a small&nbsp;comapny and there's no need for a Development branch yet, in the past we've just used labels in CVS to do releases and then branched from a label on the rare occasions we need to do a 'service pack' release.&nbsp; Normally we ship bug fixes by providing the tip release.</p>\r\n<p>I then created a new project &quot;My Libraries&quot; that contains some shared libraries I wanted to use.&nbsp; I wanted these to be in their own project so that the libraries could be updated with new versions, but other projects that use the libraries could accept the updates as they see fit.</p>\r\n<p>So that when you get &quot;My Product&quot;, you get everything needed to build it I wanted to include the Libraries in there.&nbsp; So I tried to branch &quot;My Libraries&quot; in to a sub folder of &quot;My Product&quot;, but you can't appear to do this as it complains &quot;My Product&quot; is already a branch.&nbsp; What I was tryng to do was like this:</p>\r\n<p>&quot;Libraries&quot; Project -&gt; &quot;Libraries&quot; Folder</p>\r\n<p>&quot;My Product&quot; Project -&gt; &quot;Main&quot; Branch -&gt; &quot;Src&quot; Folder</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &quot;Libraries&quot; Folder Branch*</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &quot;Release&quot; Branch</p>\r\n<p>* =&nbsp;this was where I was trying to create the branch</p>\r\n<p>Eventually I managed to re-arrange things with the &quot;Libraries&quot; Folder Branch at the same level as the &quot;Main&quot; and &quot;Release&quot; branches:</p>\r\n<p>&quot;Libraries&quot; Project -&gt; &quot;Libraries&quot; Folder</p>\r\n<p>&quot;My Product&quot; Project -&gt; &quot;Main&quot; Branch</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &quot;Release&quot; Branch</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &quot;Libraries&quot; Folder Branch</p>\r\n<p>But there's a couple of things I don't like about this.</p>\r\n<p>First, I'd like a particular release to have a particular set of libraries.&nbsp; So the plan was to update the Libraries, merge in to &quot;My Product&quot; Main as appropriate, test and then merge into the &quot;Release&quot; branch for a release.</p>\r\n<p>Second, if I get the Main branch I don't get the Libraries automatically, and if I get the project as a whole the &quot;Main&quot; and &quot;Release&quot; branches end up sharing the same copy of &quot;Libraries&quot;.</p>\r\n<p>Any recommendations on how to do this kind of thing would be gratefully received.</p>\r\n<p>Thanks,</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Matt.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-21T07:05:39.29-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "280067",
    "ThreadId": "81574",
    "Html": "<p>Matt,</p>\r\n<p>For shared libraries, I generally prefer using file references rather than project references. I would have a separate TeamProject for developing the source code for these libraries. You could deploy the assemblies to a shared folder and reference these assemblies from the various projects that use them. This approach would permit you to have multiple versions of the assemblies. Each project would create file references to the particular version they require.</p>\r\n<p>Alternatively, you could create a libraries folder within your&nbsp;Main&nbsp;branch containing these assemblies. The correct version of the assemblies would be checked into source control as part of the same branch containing the libraries folder.</p>\r\n<p>After releasing a version of &quot;My Product&quot;, you could change the Main branch to reference a different version of these assemblies. Once the Release branch is created, we recommend never doing a subsequent merge from Main (FI) since that would &quot;pollute&quot; the Release branch with newer development that might be in Main. Subsequently, when you release a new verion of &quot;My Product&quot;, you would create a new Release branch.</p>\r\n<p>Bill Heys<br>VS Ranger</p>",
    "PostedDate": "2010-01-21T07:51:41.153-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "281339",
    "ThreadId": "81574",
    "Html": "<p>Thanks for the info Bill.&nbsp;</p>\r\n<p>The shared folder approach is what we currently do, I was just wondering if we could do some kind of sharing using branching&nbsp;in TFS (I guess a bit&nbsp;like sharing a file and then pinning it&nbsp;in Source Safe).&nbsp;</p>\r\n<p>We'll try the TeamProject and shared folder approach for the moment.</p>\r\n<p>Thanks for the advice on the Releases branch.&nbsp; I was following the Basic Branch Plan for this, but will experiment a bit and see how it goes.</p>\r\n<p>Thanks and&nbsp;Regards,</p>\r\n<p>Matt.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-25T03:48:33.79-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "553364",
    "ThreadId": "81574",
    "Html": "\r\n<p>Our team also have shared applications that are used in many different team projects.&nbsp; When debugging an application or doing a step through we found that we could reference that application with the reference path,&nbsp; this worked fine and we could\r\n step through programs for debugging.&nbsp;</p>\r\n<p>Where we ran into instances was this worked fine for using in the reference path but when we wanted to point to a different web application or use Type Web the Reference Path does not allow this only files.&nbsp; We do not want to add anything to the actual\r\n references since some of the programs we want to walk through could be production applications (in Main) that we do not want to change.</p>\r\n<p>Any suggestions on testing?</p>\r\n",
    "PostedDate": "2011-01-21T10:12:59.503-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
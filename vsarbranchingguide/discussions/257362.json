[
  {
    "Id": "611658",
    "ThreadId": "257362",
    "Html": "\r\n<p>I'm taking over TFS for a company I just hired on at. &nbsp;I've worked with TFS but never setup projects. &nbsp;I want to&nbsp;restructure&nbsp;TFS here, get it started &quot;the right way&quot;.</p>\r\n<p>&nbsp;</p>\r\n<p>As I understand it we should have a <em>Team Project</em>&nbsp;for items that the business would consider a\r\n<em>product,</em>&nbsp;this lets us encapsulate releases better. (correct?)</p>\r\n<p>What I mean is we have a number of projects/solutions :</p>\r\n<p>&quot;Core code&quot; shared between multiple projects</p>\r\n<p>A RIA style web site, that &quot;hosts&quot; other applications</p>\r\n<p>The individual applications &quot;hosted&quot; in the RIA web site</p>\r\n<p>Other projects not related to the website or apps that use some of the core code. (~10&#43; right now)</p>\r\n<p><br>\r\nShould I have 3&#43; team projects? &nbsp;I have seen some say that it is better/easier to use fewer team projects.</p>\r\n<p>&nbsp;</p>\r\n<p>The situation I want to <strong>avoid</strong>&nbsp;is this:</p>\r\n<p>If we have one project for Core/WebSite/WebApplications then any time I need to release an update to a web app or the hosting site, I have to have a release branch that contains everything else (core/website/ all webapps).</p>\r\n<p>&nbsp;</p>\r\n<p>Really looking for some help here since it is so difficult to restructure things later.</p>\r\n",
    "PostedDate": "2011-05-12T06:44:51.847-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "611923",
    "ThreadId": "257362",
    "Html": "<p>You've probably got many questions folded into \"structuring TFS the right way\". The first topic is \"TFS Team Project(s)\" so I'll start there.</p>\n<p>Consider putting all projects into a single \"TFS Team Project\" unless you have a reason for using separate TFS Team Projects (need different TFS Work Item Templates (custom/different work item workflow processes), fundamental difference in release cadence, etc). It's a common misconception that you have to have a separate TFS Team Project for each product or even each set of branches.</p>\n<p>I recommend reading the following articles:</p>\n<ul>\n<li>\"<a id=\"viewpost_ascx_TitleUrl\" title=\"TFS Areas vs Team Projects\" href=\"http://geekswithblogs.net/hinshelm/archive/2010/03/09/when-should-i-use-areas-in-tfs-instead-of-team.aspx\" target=\"_blank\">When should I use Areas in TFS instead of Team Projects in Team Foundation Server 2010</a>\" by Martin Hinshelwood 3/9/2010 (updated 4/13/2010) \n<ul>\n<li>Great list of pros and 5 cons to consider plus screenshot walkthrough creating structure for several projects in a&nbsp;consolidated TFS Team Project. </li>\n</ul>\n</li>\n<li><a id=\"viewpost_ascx_TitleUrl\" title=\"Title of this entry.\" href=\"http://geekswithblogs.net/hinshelm/archive/2011/01/04/project-of-projects-with-team-foundation-server-2010.aspx\">Project of Projects with team Foundation Server 2010</a>&nbsp;by Martin Hinshelwood 1/4/2011 \n<ul>\n<li>I'm a sucker for descriptions with inline annotated screenshots and this particular blog has screenshots in spades. </li>\n<li>Source code folders, Iteration Paths, Area Paths, </li>\n</ul>\n</li>\n<li><a href=\"http://blogs.msdn.com/b/bharry/archive/2011/04/01/build-folders.aspx\">Build Folders </a>by Brian Harry 4/1/2011 \n<ul>\n<li>Use a Build Definition naming convention even if you don't use the plug-in discussed. If you consolidate projects in a single TFS Team Project then naming convention is even more important! </li>\n</ul>\n</li>\n</ul>\n<p>You can also build and branch between team projects if you need so creating (or migrating to) a consolidated TFS Team Project is not a requirement. I've found this a bit conceptually challenging... especially when I start thinking about archiving Team Projects.</p>\n<p>These should give you a great start.</p>\n<p>Enjoy! -<em>Zephan</em></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
    "PostedDate": "2011-05-12T12:11:47.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "612606",
    "ThreadId": "257362",
    "Html": "<p>I don't necessarily agree (nor do I necessarily agree with Martin and the other referenced sources) with respect to the basic approach for organizing Team Projects.</p>\r\n<p>The VS ALM Ranger team recently published an MSDN article on Team Project Collections and Team Projects (<a href=\"http://msdn.microsoft.com/en-us/magazine/gg983486.aspx\">http://msdn.microsoft.com/en-us/magazine/gg983486.aspx</a>). In this article, we tried to describe various considerations for deciding when (or wnen not) to combine Visual Studio Projects / Solutions into a single Team Project vs organizing them into separate Team Projects.&nbsp;As Zephan indicated ealier, each Team Project has its own Process Template. So if you had two project teams, and one wanted to use the MSF for Agile Development v5.0 process template while the second team wanted to use the MSF for CMMI Process Improvement v5.0 process template, then they would each have to be working in their own Team Project.</p>\r\n<p>Likewise, if you wanted&nbsp;a different security model (where the tech lead of one team with branching permissions in his&nbsp;/ her own team project, should not be permitted to branch the code for the second team project, or where developers on one team are only able to check code into branches in their own team project and not into branches in the second team's team project) - then isolating these two teams into separate team projects might be the answer.</p>\r\n<p>I generally prefer to think of Project Intitiatives (a project with a set of requirements, a plan, a team, a set of milestones, a release schedule, etc that is different from another project iniative in my organization).&nbsp; I like to organize my Project Initiative into its own Team Project. This offers the advantage that the project team has control over choice of process template, process template customization, work item / work flow customization, report and query customization - and does not need to reach consensus with other proejct teams on these decisions).</p>\r\n<p>Within the Team Project, I tend to like having a single branching strategy for the project initiative that takes into account how the team develops software (waterfall, iterative, agile, Scrum,etc). As well the branching strategy should take into account how the team releases and supports software (do they release once every two years, do require sustained engineering - hot fixes and service packs for one or more production releases, do they have four-week sprints, do they have iterative releases. How many parallel releases do they support. How many service packs per release, etc). When it comes to archiving a the code for a Project Initiative - it is easier to achieve when that Project Initiative has its own Team Project. It is very hard to archive *part* of a Team Project.</p>\r\n<p>I generally perfer to use the Areas feature of a Team Project for categorizing or organzing the code within my solution - rather than using it to organize multiple teams and solutions which could be in separate Team Projects but we decided to colocate them within the same Team Project. So although you CAN have multiple Teams working within the same Team Project, and you can use Areas to organize them, I generally don't like this approach. When I want to isolate two teams I like to use Team Projects as my isolation mechanism.</p>\r\n<p>Having said that, if you like the concept of project of projects and the ease of reporting that you can achieve when everything is contained in one Team Project, by all means follow the suggestions in Martin's two blogs.</p>\r\n<p>It is possible to query and report across Team Projects. It is also possible to branch across Team Projects (for example having shared code in one Team Project and then sharing that code to multiple other Team Projects - leverages the ability to branch across Team Project boundaries.</p>\r\n<p>From the opposing view point :-)</p>\r\n<p>Regards,<br />Bill Heys<br />VS ALM Ranger</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-05-13T14:10:39.047-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
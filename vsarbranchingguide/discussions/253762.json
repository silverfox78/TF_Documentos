[
  {
    "Id": "596745",
    "ThreadId": "253762",
    "Html": "\r\n<p>Referring to the&nbsp;Branch plans (Basic, Standard, Advanced) discussed in this guidance are very useful, but this guidance is not able answer the below questions properly.</p>\r\n<p><br>\r\n<strong>Real Life Scenario</strong>:</p>\r\n<ol>\r\n<li>I have an TRUNK for my base code. And Create DEV-1, DEV-2 branched from it. As per my SDLC life cycle...Once development is completed I need to move the code for System Itegration Testing (SIT), and then move to User Acceptance Test (UAT). Finally code&nbsp;will\r\n be moved to Production having all tests are passed. </li><li>I have multiple prallel releases. </li><li>Release can have bugs at any stage (SIT, UAT, PRODUCTION). </li></ol>\r\n<p><strong>Questions</strong>:</p>\r\n<ol>\r\n<li>From which branch I need to move code to System Itegration Testing (SIT), and then move to User Acceptance Test (UAT)?\r\n</li><li>If there are bugs in SIT, UAT where I need to fix them? </li><li>Where I need to fix the production hot fixes? </li></ol>\r\n<p>Can you please clarify my questions. <br>\r\n- Pradeep</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-04-13T11:33:24.367-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "596759",
    "ThreadId": "253762",
    "Html": "<p>In the branching guidance, we call TRUNK the MAIN branch. It is the parent of the development (feature) branches.&nbsp;I assume DEV-1 and DEV-2 are two development teams working on the same release? At some point the code from these two branches will be integrated. Our guidance recommends doing this initial integration in one of the DEV branches. For example, you could start by integrating DEV-1 with the latest changes from MAIN. Merge MAIN -&gt; DEV-1 and test the integration in the DEV-1 branch. You could deploy the code in this branch to your SIT environment if you wish for integration testing.</p>\n<p>Next you could integrate DEV-1 with DEV-2. We recommend doing one last merge (FI) from MAIN to DEV-1 followed by testing and then merge DEV-1 (RI) to MAIN. Next merge MAIN (F)) to DEV-2 and test the integration of DEV-1 with DEV-2 in the DEV-2 branch. You could deploy the DEV-2 branch to your SIT environment for integration testing of DEV-1 and DEV-2. If there are bugs in SIT, fix them in the DEV branch that was deployed to SIT. If there are bugs in UAT, fix them in the DEV branch that was merged to MAIN for UAT testing. In other words, defects that are found prior to release are fixed in DEV. Defects that are found after release are fixed in a Release branch.</p>\n<p>Once the integration of DEV-1 and DEV-2 is ready for UAT, do one last merge of MAIN (FI) to DEV-2, final testing, and merge DEV-2 (RI) to MAIN. Deploy MAIN to the UAT environment for UAT testing. When UAT sign off on the build, it is ready for release. At this point you need to decide which of the branching plans you are following. Let's suggest you want to follow the advanced plan. When you are ready for release, you create the three release branches at the same point in time. First branch MAIN to ServicePack, then branch ServicePack to HotFix, and finally branch HotFix to Release. Make the Release branch read-only. If you need to support multiple releases, then add a suffix to the branch names for the release number (e.g. ServicePack 1.0, HotFix 1.0, and Release 1.0)</p>\n<p>Make post-release (production) hot fixes in the HotFix branch for the release where the defect is found. Do not merge HotFix to Release (it is read-only). But you can merge HotFix to ServicePack and then to Main if you want the defect fix to be carried forward to vNext.</p>\n<p>&nbsp;Regards,<br />Bill Heys<br />VS ALM Ranger</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
    "PostedDate": "2011-04-13T12:06:35.36-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "596974",
    "ThreadId": "253762",
    "Html": "<p>Hi Bill, Thank you for immediate response.<br /><br /><strong>Question#1</strong><br />In my case DEV-1, DEV-2 are two different branches for 2 separate relases. If take code from DEV branches for SIT release, then how to do integration testing?<br />As per your TFS 2010 Branching guidance, it seems all relases (SIT, UAT) must be through the MAIN branch. And DEV branches are only for development and developer unit testing.</p>\n<p>I think all deployments for TEST/Production must be taken from MAIN branch, as it a stable from development point of view and contains all completed code from several DEV branches.</p>\n<p>Correct me if I am Wrong.</p>\n<p><strong>Question#2<br /></strong>ï»¿As per your reply, we need to give SIT release from DEV branches and UAT realse from MAIN branches. <br />This leads to increase in number of merging activities in SIT release, if you N number of DEV branches.<br />How about taking SIT release from MAIN branch similar to UAT realse?</p>\n<p><strong>Question#3<br /></strong>As per TFS2010 Standard Branch Plan...<br />1. HotFixes/ShipStop bugs will be fixed and checked-in to RELEASE branch and release goes to production from here it self.<br />2. Any ServicePack workitem will be fixed and checked-in to SERVICEPACK. <br /><br />How to move to this Service pack to production. can we take directly from existing SERVICEPACK branch? or need to create other RELEASE branch?<br />Is it required to create multiple SERVICEPACK / RELEASE branches for a single major release? <br />i.e, if a major release contains more than one SPs, then is it required to create multiple SERVICEPACK branches with the version number?</p>\n<p>Please clarify.</p>\n<p>- Pradeep</p>",
    "PostedDate": "2011-04-13T21:23:38.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "598003",
    "ThreadId": "253762",
    "Html": "<p>I am not sure I totally understand your questions.</p>\r\n<p>If DEV-1 and DEV-2 are development branches for two separate releases, why not simply deploy from one of these branches for SIT testing. I have no problem deploying from ANY branch to a testing environment. When you are stabilizing code for release, it makes sense for Main to be deployed to QA for stabilization testing (or UAT).</p>\r\n<p>When I deploy to test, it is a deployment activity (build and deploy) from a branch to a testing environment. It is NOT a branching or merging activity. I don't understand Question 2 in this context. You would not have N Dev branches simply because you have N testing environments.</p>\r\n<p>With respect to question 3, we never check changes into the release branch. if you need to make hot fixes separate from service packs, you should consider the Advanced plan.</p>\r\n<p>Read my blog <a href=\"http://blogs.msdn.com/b/billheys/archive/2011/03/22/where-do-i-fix-a-production-defect.aspx\">http://blogs.msdn.com/b/billheys/archive/2011/03/22/where-do-i-fix-a-production-defect.aspx</a>, it might answer some of your questions.</p>\r\n<p>Regards,<br />Bill Heys<br />VS ALM Ranger</p>",
    "PostedDate": "2011-04-15T08:37:42.613-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "598567",
    "ThreadId": "253762",
    "Html": "<p>Regarding your point....\"<em>When you are stabilizing code for release, it makes sense for Main to be deployed to QA for stabilization testing (or UAT)</em>.\"<br /><br />Consider the below case of 2 releases and their dates:<br /><br />ReleaseName-----DevBranchName------SIT Release-------UAT Release-----------Prod Release<br />_____________________________________________________________________________________________________________<br />R1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dev-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jan-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jan-10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Jan-20<br />R2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dev-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Jan-15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jan-25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Feb-05</p>\r\n<p><strong>Jan-16</strong>: By this date, R1 will be in UAT, and R2 will be in SIT. <br /><strong>Jan-17</strong>: Got bugs in both R1-UAT, R2-SIT, need to provide the fixes to both. <br /><strong>Jan-18</strong>: R1-UAT bugs are fixed in Dev-1 branch, and R2-SIT bugs are fixed in Dev-2 branch. Need to provide these fixed to R1-UAT, R2-SIT<br /><br /><span style=\"color: black; font-size: 10pt;\">having </span>this scenario, I need to merge (RI) fixes to MAIN and give the patch. This leads the possibility of R1-UAT having the code related to R1. This should not happen.</p>\r\n<p><strong>My <strong><span style=\"color: black; font-size: 10pt;\">Approach </span></strong>to the solution</strong>:</p>\r\n<ol>\r\n<li>Create DEV braches from MAIN, for each main release.</li>\r\n<li>Deploy DEV branches code for SIT/UAT, by merge&nbsp;(FI) code from MAIN.</li>\r\n<li>Fix&nbsp;any bugs&nbsp;found in SIT/UAT in DEV&nbsp;branches <span style=\"color: black; font-size: 10pt;\">itself</span>.</li>\r\n<li>In between,&nbsp;if there are any updates to MAIN (RI merge from any other Stable DEV to MAIN) - do the FI merge immediately to all running DEV branches, followed by the testing.</li>\r\n<li>Once UAT is passed (confirmed the code is stable) do RI&nbsp;merge from DEV to MAIN and Create MAIN &gt; SERVICEPACK &gt; RELEASE branches to move code to Production.</li>\r\n<li><span style=\"color: black; font-size: 10pt;\">Hot fixes </span>will be done&nbsp;in RELEASE branch itself.</li>\r\n<li><span style=\"color: black; font-size: 10pt;\">Maintenance </span>Release work will be done in SERVicePACK branch.</li>\r\n</ol>\r\n<p>Is my approch correct? Please verify and provide your <span style=\"color: black; font-size: 10pt;\">valuable </span><span style=\"color: black; font-size: 10pt;\">suggestions</span>.<br />Thank you for your time spending on this thread.</p>\r\n<p>- Pradeep.</p>",
    "PostedDate": "2011-04-16T21:42:05.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
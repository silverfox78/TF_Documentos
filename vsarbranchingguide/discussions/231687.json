[
  {
    "Id": "510120",
    "ThreadId": "231687",
    "Html": "<p><span style=\"color:#000000\">These are the 2 question that I have based on the subject:</span></p>\r\n<p><span style=\"color:#ff0000\">How do I change current solution to use branching for multiple versions of Visual Studio?</span></p>\r\n<p><span style=\"color:#ff0000\">How should the branch&nbsp; for solution1 (see TFS setup) really look like?</span></p>\r\n<p>TFS setup:</p>\r\n<p>&nbsp;$/tfsServer</p>\r\n<p>&nbsp;$/tfsServer/ourFolder (using Areas for different solutions)</p>\r\n<p>&nbsp;$/tfsServer/ourFolder/solution1 (VS2003)<br>&nbsp;$/tfsServer/ourFolder/solution1/project1(with folders)<br>&nbsp;$/tfsServer/ourFolder/solution1/project2(with folders)<br>&nbsp;$/tfsServer/ourFolder/solution1/project3(with folders)<br>&nbsp;$/tfsServer/ourFolder/solution1/project4(with folders)</p>\r\n<p>&nbsp;$/tfsServer/ourFolder/solutionN (not VS2003)</p>\r\n<p>&nbsp;$/tfsServer/otherTeam1Folder<br>&nbsp;.<br>&nbsp;.<br>&nbsp;.<br>&nbsp;$/tfsServer/otherTeamNFolder</p>\r\n<p><span style=\"text-decoration:underline\"><strong>Intro:</strong></span></p>\r\n<p>Currently we (a small team of 5) are using TFS 2008 (TFS 2010 will go live in 2011). Most of our solutions were imported from Visual Source Safe and slowly updated to use VS2008.</p>\r\n<p>Our solutions did not consider branching as we always released the latest version using check out/in, tested task(s), release with set of tasks. Sometimes tasks were included that were not tested for this release - OUCH!!! (If the user needs to officially run the app using those &quot;untested&quot; features, they would have to wait until the next release. We have staggered test cycles and frequent releases during those cycles.)</p>\r\n<p>&nbsp;Now that we have VS2010 we would like bring solution1 into VS2010 and I see the need to use branching :) because we need to parallel develop until the solution is tested in VS2010.</p>\r\n<p>The latest version is released and may by design exist side by side with an older version which means we may need to update a version with a capability that does not neccessarily belongs in the latest version. If it were not for this, I would drop the previous solutions and us CM snapshots of source files to update those versions.</p>\r\n<p>The problem I see is that creating subfolder $/tfsServer/ourFolder/solution1/Main and moving $/tfsServer/ourFolder/solution1/projectX under Main has the side effect of not easily pulling out a previous versionSpec, i.e., label. One must use TFPT commandline. (I did it, developed for a couple of days, decided to rollback 8 or more checkins, and start fresh.)</p>\r\n<p>&nbsp;<span style=\"text-decoration:underline\"><strong>Consideration:</strong></span></p>\r\n<p>I have now considered the following but I am not sure if this is the way to go:</p>\r\n<p>&nbsp; 1. Keep the existing branch and use it as the VS2003 Rel branch.<br>&nbsp;&nbsp;&nbsp;&nbsp; - VS2003 development can continue from this branch using a VS2003 Dev branch.<br>&nbsp;&nbsp;&nbsp;&nbsp; - Changes need to be added to the VS2010 Dev branch.</p>\r\n<p>&nbsp; 2. Create a branch from VS2003 Rel and convert solution to VS2010 and use this as the VS2010 Main branch. <br>&nbsp;&nbsp;&nbsp;&nbsp; (A new Solution using old code and losing History of files?)<br>&nbsp;&nbsp;&nbsp;&nbsp; - Never Merge back to the VS2003 Rel branch until everthing has been tested out!<br>&nbsp;&nbsp;&nbsp;&nbsp; - Merging back after both branches have same functinoality will most likely screw up everything. :)</p>\r\n<p>&nbsp; 3. Create a Dev branch from the VS2003 Main branch<br>&nbsp;&nbsp;&nbsp;&nbsp; - continue development and giving VS2010 developer code changes.</p>\r\n<p>&nbsp; 4. Create a Dev branch from the VS2010 Main branch<br>&nbsp;&nbsp;&nbsp;&nbsp; - Implement changes to get the app to run the &quot;same&quot; way as the VS2003 version.<br>&nbsp;&nbsp;&nbsp;&nbsp; - Adding a secondary VS2010 Dev branch that includes changes made in the VS2003 Dev branch.</p>\r\n<p><span style=\"color:#ff0000\">How do I change current solution to use branching for multiple versions of Visual Studio?</span></p>\r\n<p><span style=\"color:#ff0000\">How should the branch&nbsp; for solution1 really look like?</span></p>",
    "PostedDate": "2010-10-20T13:11:35.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "511209",
    "ThreadId": "231687",
    "Html": "\r\n<p>I don't know if this will be helpful, but I just migrated several projects into TFS 2010 earlier this week.&nbsp; I have a Team Project that contains several applications.&nbsp; A couple applications use vs2005, one uses vs2010 and the rest use vs2008.&nbsp;\r\n I have installed the TFS 2010 fix for both vs2005 Team Explorer and vs2008 Team Explorer. On my computer I was able to pull down the source code and with all three versions of visual studio and check out and check in items.&nbsp; My structure is like the following.&nbsp;\r\n I used indentation to show sub-items.</p>\r\n<p>Application (Team Project)<br>\r\n&nbsp;&nbsp;&nbsp; Website (Folder)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Main (Branch - vs2010)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Developement (Branch - vs2010)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Release (Branch - vs2010)<br>\r\n&nbsp;&nbsp;&nbsp; Web Service (Folder)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Main (Branch - vs2005)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Developement (Branch - vs2005)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Release (Branch - vs2005)<br>\r\n&nbsp;&nbsp;&nbsp; End-Of-Day Processes (Folder)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Email (Branch - vs2008)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Updates (Branch - vs2008)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Diagnostic Tools (Branch - vs2008)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n",
    "PostedDate": "2010-10-22T09:59:17.883-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]